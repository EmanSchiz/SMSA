# -*- coding: utf-8 -*-
"""core functions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t1XSdoVNDf-aMVOcD360gYFeQwu4i9HI
"""

!pip install transformers tweepy pandas matplotlib seaborn streamlit
from transformers import pipeline
import tweepy
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Load sentiment analysis pipeline
sentiment_analyzer = pipeline("sentiment-analysis")
# Twitter API credentials
BEARER_TOKEN = "AAAAAAAAAAAAAAAAAAAAAOVgxAEAAAAAgv9p%2F7mxuSraiYZJ7m1E%2BGRFpmk%3DcMWRGfJGcBCrJlBMnCekcLAgsOSkfj8ELkEaVx7lERBiN9cMTK"

# Tweepy client setup
client = tweepy.Client(bearer_token=BEARER_TOKEN)

# Fetch recent tweets
def fetch_tweets(keyword, count=50):
    tweets = client.search_recent_tweets(query=keyword, max_results=count)
    data = [{"text": tweet.text} for tweet in tweets.data]
    return pd.DataFrame(data)

# Example usage
tweets_df = fetch_tweets("your_keyword", count=50)
def analyze_sentiments(dataframe):
    sentiments = []
    for text in dataframe["text"]:
        result = sentiment_analyzer(text)[0]
        sentiments.append(result["label"])
    dataframe["sentiment"] = sentiments
    return dataframe

# Apply analysis
tweets_df = analyze_sentiments(tweets_df)
def visualize_sentiments(dataframe):
    sentiment_counts = dataframe["sentiment"].value_counts()
    sns.barplot(x=sentiment_counts.index, y=sentiment_counts.values)
    plt.title("Sentiment Analysis Results")
    plt.show()

# Visualize
visualize_sentiments(tweets_df)